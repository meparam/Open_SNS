buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}




android {

    Properties properties = new Properties()
    properties.load(project.rootProject.file('key/sign.properties').newDataInputStream())
    compileSdkVersion 24
    buildToolsVersion '24.0.2'



    defaultConfig {
        applicationId "xyz.sangcomz.open_sns"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 12
        versionName "0.3.7"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias properties.get("alias")
            keyPassword properties.get("password")
            storeFile rootProject.file(properties.get("keyFilePath"))
            storePassword properties.get("password")
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

//    productFlavors {
//        // Define separate dev and prod product flavors.
//        dev {
//            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
//            // to pre-dex each module and produce an APK that can be tested on
//            // Android Lollipop without time consuming dex merging processes.
//            minSdkVersion 21
//        }
//        prod {
//            // The actual minSdkVersion for the application.
//            minSdkVersion 15
//        }
//    }




    dexOptions {
        // dex의 크기를 늘리기 위한 설정(2^16개 초과)
        jumboMode true
        // 앱 구동 시 자바 할당 힙을 지정
        javaMaxHeapSize "4g"
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('com.mikepenz:materialdrawer:4.5.4@aar') {
        transitive = true
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.mikepenz:crossfader:1.3.2@aar'
    compile 'com.mikepenz:crossfadedrawerlayout:0.0.2@aar'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.sangcomz:FishBun:0.4.4@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'me.drakeet.materialdialog:library:1.2.8'
    compile 'com.google.android.gms:play-services-gcm:9.6.1'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'de.greenrobot:eventbus:2.4.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.github.triplet.play'


play {
    track = 'production' // or 'rollout' or 'beta' or 'alpha'
//    userFraction = 0.2 // only necessary for 'rollout', in this case default is 0.1 (10% of the target)
    jsonFile = rootProject.file('key.json')
}
